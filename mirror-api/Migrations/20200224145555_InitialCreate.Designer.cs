// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mirror_api.Models;

namespace mirror_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200224145555_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("mirror_api.Models.Classroom", b =>
                {
                    b.Property<int>("ClassroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClassroomTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("ColorPicker")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LevelGroupMGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LevelGroupMLevelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClassroomId");

                    b.HasIndex("LevelGroupMGroupId", "LevelGroupMLevelId");

                    b.ToTable("Classroom");
                });

            modelBuilder.Entity("mirror_api.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GroupName")
                        .HasColumnType("TEXT");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("mirror_api.Models.Level", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LevelName")
                        .HasColumnType("TEXT");

                    b.HasKey("LevelId");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("mirror_api.Models.LevelGroup", b =>
                {
                    b.Property<int>("MGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MLevelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MGroupId", "MLevelId");

                    b.HasIndex("MLevelId");

                    b.ToTable("LevelGroups");
                });

            modelBuilder.Entity("mirror_api.Models.Classroom", b =>
                {
                    b.HasOne("mirror_api.Models.LevelGroup", "LevelGroup")
                        .WithMany("Classrooms")
                        .HasForeignKey("LevelGroupMGroupId", "LevelGroupMLevelId");
                });

            modelBuilder.Entity("mirror_api.Models.LevelGroup", b =>
                {
                    b.HasOne("mirror_api.Models.Group", "Group")
                        .WithMany("LevelGroups")
                        .HasForeignKey("MGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mirror_api.Models.Level", "Level")
                        .WithMany("LevelGroups")
                        .HasForeignKey("MLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
